# Code generated by vendeps. DO NOT EDIT.

# Copyright 2022 The Firefly Authors.
#
# Use of this source code is governed by a BSD 3-clause
# license that can be found in the LICENSE file.

{{ if .BuildScript -}}
load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
{{- end }}
load("@rules_rust//rust:defs.bzl"{{ if not .NoDocs }}, "rust_doc"{{ end }}, {{ if .ProcMacro }}"rust_proc_macro"{{ else }}"rust_library"{{ end }}{{ if not .NoTests }}, "rust_test"{{ end }})

{{ if .ProcMacro }}rust_proc_macro{{ else }}rust_library{{ end }}(
    name = "{{ .Name }}",
    srcs = glob(["**/*.rs"]),
    compile_data = glob(["**"]),{{ if .Features }}
    crate_features = [{{ range .Features }}
        "{{ . }}",{{end}}
    ],{{ end }}
    crate_name = "{{ crateName .Name }}",
    edition = {{ if .Edition }}"{{ .Edition }}"{{ else }}"2015"{{ end }},{{ if .ProcMacroDeps }}
    proc_macro_deps = [{{ range .ProcMacroDeps }}
        "//vendor/rust/{{ . }}",{{ end }}
    ],{{ end }}
    rustc_flags = [
        # In most cases, warnings in 3rd party crates are not interesting as
        # they're out of the control of consumers. The flag here silences
        # warnings. For more details see:
        # https://doc.rust-lang.org/rustc/lints/levels.html
        "--cap-lints=allow",
    ],
    tags = [
        "manual",  # Only build when needed as a dependency.
    ],
    version = "{{ .Version }}",
    visibility = ["//visibility:public"],{{ if or .Deps .BuildScript }}
    deps = [{{ if .BuildScript }}
        ":{{ .Name}}_build_script",{{ end }}{{ range .Deps }}
        "//vendor/rust/{{ . }}",{{ end }}
    ],{{ end }}
){{ if .BuildScript }}

cargo_build_script(
    name = "{{ .Name }}_build_script", # This is special-cased in Rustc, so don't change it.
    srcs = glob(["**/*.rs"]),
    crate_name = "build_script_build",
    crate_root = "{{ .BuildScript }}",
    edition = {{ if .Edition }}"{{ .Edition }}"{{ else }}"2021"{{ end }},
    rustc_flags = [
        # In most cases, warnings in 3rd party crates are not interesting as
        # they're out of the control of consumers. The flag here silences
        # warnings. For more details see:
        # https://doc.rust-lang.org/rustc/lints/levels.html
        "--cap-lints=allow",
    ],
    version = "{{ .Version }}",
    visibility = ["//visibility:private"],{{ if .BuildScriptDeps }}
    deps = [{{ range .BuildScriptDeps }}
        "//vendor/rust/{{ . }}",{{ end }}
    ],{{ end }}
){{ end }}{{ if not .NoDocs }}

rust_doc(
    name = "docs",
    crate = ":{{ .Name }}",
    visibility = ["//visibility:public"],
){{ end }}{{ if not .NoTests }}

rust_test(
    name = "{{ .Name }}_test",
    size = "small",
    compile_data = glob(["**"]),
    crate = ":{{ .Name }}",
    crate_name = "{{ crateName .Name }}",{{ if or .TestData .TestDataGlobs }}
    data = {{ if .TestDataGlobs }}glob([{{ range .TestDataGlobs }}
        "{{ . }}",{{ end }}
    ]){{ end }}{{ if and .TestData .TestDataGlobs }} + {{ end }}{{ if .TestData }}[{{ range .TestData }}
        "{{ . }}",{{ end }}
    ]{{ end }},{{ end }}{{ if .TestEnv }}
    env = { {{- range $k, $v := .TestEnv }}
        "{{ $k }}": "{{ $v }}",{{ end }}
    },{{ end }}
    rustc_flags = [
        # In most cases, warnings in 3rd party crates are not interesting as
        # they're out of the control of consumers. The flag here silences
        # warnings. For more details see:
        # https://doc.rust-lang.org/rustc/lints/levels.html
        "--cap-lints=allow",
    ],{{ if .TestDeps }}
    deps = [{{ range .TestDeps }}
        "//vendor/rust/{{ . }}",{{ end }}
    ],{{ end }}
){{ end }}
