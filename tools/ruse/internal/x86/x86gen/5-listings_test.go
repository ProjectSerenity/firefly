// Copyright 2023 The Firefly Authors.
//
// Use of this source code is governed by a BSD 3-clause
// license that can be found in the LICENSE file.

package main

import (
	"path/filepath"
	"testing"

	"github.com/google/go-cmp/cmp"
)

func TestParse(t *testing.T) {
	tests := []struct {
		Name     string
		File     string
		ID       string
		Date     string
		Listings []*Listing
	}{
		{
			Name: "Vol2a",
			File: "Volume-2a-Instruction-Set-Reference-A-L",
			ID:   "253666-079US",
			Date: "March 2023",
			Listings: []*Listing{
				{
					// Simple listing.
					Page:  129,
					Pages: 2,
					Name:  "AAA-ASCII Adjust After Addition",
					MnemonicTable: []Mnemonic{
						{
							Page:            129,
							Opcode:          "37",
							Instruction:     "AAA",
							OperandEncoding: "ZO",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "ASCII adjust AL after addition.",
						},
					},
					OperandEncodingTable: []OperandEncoding{
						{
							Page:      129,
							Encoding:  "ZO",
							TupleType: "",
							Operands:  [4]string{"N/A", "N/A", "N/A", "N/A"},
						},
					},
				},
				{
					// Listing with no operand encoding table.
					Page:  468,
					Pages: 2,
					Name:  "F2XM1-Compute 2^x-1",
					MnemonicTable: []Mnemonic{
						{
							Page:        468,
							Opcode:      "D9 F0",
							Instruction: "F2XM1",
							Mode64:      "Valid",
							Mode32:      "Valid",
							Mode16:      "Valid",
							Description: "Replace ST(0) with (2 – 1).",
						},
					},
				},
				{
					// Listing a multi-page mnemonic table.
					Page:  657,
					Pages: 5,
					Name:  "Jcc-Jump if Condition Is Met",
					MnemonicTable: []Mnemonic{
						{
							Page:            657,
							Opcode:          "77 cb",
							Instruction:     "JA rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if above (CF=0 and ZF=0).",
						},
						{
							Page:            657,
							Opcode:          "73 cb",
							Instruction:     "JAE rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if above or equal (CF=0).",
						},
						{
							Page:            657,
							Opcode:          "72 cb",
							Instruction:     "JB rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if below (CF=1).",
						},
						{
							Page:            657,
							Opcode:          "76 cb",
							Instruction:     "JBE rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if below or equal (CF=1 or ZF=1).",
						},
						{
							Page:            657,
							Opcode:          "72 cb",
							Instruction:     "JC rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if carry (CF=1).",
						},
						{
							Page:            657,
							Opcode:          "E3 cb",
							Instruction:     "JCXZ rel8",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if CX register is 0.",
						},
						{
							Page:            657,
							Opcode:          "E3 cb",
							Instruction:     "JECXZ rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Invalid",
							Description:     "Jump short if ECX register is 0.",
						},
						{
							Page:            657,
							Opcode:          "E3 cb",
							Instruction:     "JRCXZ rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Invalid",
							Mode16:          "Invalid",
							Description:     "Jump short if RCX register is 0.",
						},
						{
							Page:            657,
							Opcode:          "74 cb",
							Instruction:     "JE rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if equal (ZF=1).",
						},
						{
							Page:            657,
							Opcode:          "7F cb",
							Instruction:     "JG rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if greater (ZF=0 and SF=OF).",
						},
						{
							Page:            657,
							Opcode:          "7D cb",
							Instruction:     "JGE rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if greater or equal (SF=OF).",
						},
						{
							Page:            657,
							Opcode:          "7C cb",
							Instruction:     "JL rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if less (SF≠ OF).",
						},
						{
							Page:            657,
							Opcode:          "7E cb",
							Instruction:     "JLE rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if less or equal (ZF=1 or SF≠ OF).",
						},
						{
							Page:            657,
							Opcode:          "76 cb",
							Instruction:     "JNA rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not above (CF=1 or ZF=1).",
						},
						{
							Page:            657,
							Opcode:          "72 cb",
							Instruction:     "JNAE rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not above or equal (CF=1).",
						},
						{
							Page:            657,
							Opcode:          "73 cb",
							Instruction:     "JNB rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not below (CF=0).",
						},
						{
							Page:            657,
							Opcode:          "77 cb",
							Instruction:     "JNBE rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not below or equal (CF=0 and ZF=0).",
						},
						{
							Page:            657,
							Opcode:          "73 cb",
							Instruction:     "JNC rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not carry (CF=0).",
						},
						{
							Page:            657,
							Opcode:          "75 cb",
							Instruction:     "JNE rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not equal (ZF=0).",
						},
						{
							Page:            657,
							Opcode:          "7E cb",
							Instruction:     "JNG rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not greater (ZF=1 or SF≠ OF).",
						},
						{
							Page:            657,
							Opcode:          "7C cb",
							Instruction:     "JNGE rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not greater or equal (SF≠ OF).",
						},
						{
							Page:            657,
							Opcode:          "7D cb",
							Instruction:     "JNL rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not less (SF=OF).",
						},
						{
							Page:            657,
							Opcode:          "7F cb",
							Instruction:     "JNLE rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not less or equal (ZF=0 and SF=OF).",
						},
						{
							Page:            657,
							Opcode:          "71 cb",
							Instruction:     "JNO rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not overflow (OF=0).",
						},
						{
							Page:            657,
							Opcode:          "7B cb",
							Instruction:     "JNP rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not parity (PF=0).",
						},
						{
							Page:            657,
							Opcode:          "79 cb",
							Instruction:     "JNS rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not sign (SF=0).",
						},
						{
							Page:            657,
							Opcode:          "75 cb",
							Instruction:     "JNZ rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if not zero (ZF=0).",
						},
						{
							Page:            657,
							Opcode:          "70 cb",
							Instruction:     "JO rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if overflow (OF=1).",
						},
						{
							Page:            657,
							Opcode:          "7A cb",
							Instruction:     "JP rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if parity (PF=1).",
						},
						{
							Page:            657,
							Opcode:          "7A cb",
							Instruction:     "JPE rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if parity even (PF=1).",
						},
						{
							Page:            657,
							Opcode:          "7B cb",
							Instruction:     "JPO rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if parity odd (PF=0).",
						},
						{
							Page:            657,
							Opcode:          "78 cb",
							Instruction:     "JS rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if sign (SF=1).",
						},
						{
							Page:            657,
							Opcode:          "74 cb",
							Instruction:     "JZ rel8",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump short if zero (ZF = 1).",
						},
						{
							Page:            657,
							Opcode:          "0F 87 cw",
							Instruction:     "JA rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if above (CF=0 and ZF=0). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            657,
							Opcode:          "0F 87 cd",
							Instruction:     "JA rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if above (CF=0 and ZF=0).",
							OperandSize:     true,
						},
						{
							Page:            657,
							Opcode:          "0F 83 cw",
							Instruction:     "JAE rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if above or equal (CF=0). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            657,
							Opcode:          "0F 83 cd",
							Instruction:     "JAE rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if above or equal (CF=0).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 82 cw",
							Instruction:     "JB rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if below (CF=1). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 82 cd",
							Instruction:     "JB rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if below (CF=1).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 86 cw",
							Instruction:     "JBE rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if below or equal (CF=1 or ZF=1). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 86 cd",
							Instruction:     "JBE rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if below or equal (CF=1 or ZF=1).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 82 cw",
							Instruction:     "JC rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if carry (CF=1). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 82 cd",
							Instruction:     "JC rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if carry (CF=1).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 84 cw",
							Instruction:     "JE rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if equal (ZF=1). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 84 cd",
							Instruction:     "JE rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if equal (ZF=1).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 84 cw",
							Instruction:     "JZ rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if 0 (ZF=1). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 84 cd",
							Instruction:     "JZ rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if 0 (ZF=1).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 8F cw",
							Instruction:     "JG rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if greater (ZF=0 and SF=OF). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 8F cd",
							Instruction:     "JG rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if greater (ZF=0 and SF=OF).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 8D cw",
							Instruction:     "JGE rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if greater or equal (SF=OF). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 8D cd",
							Instruction:     "JGE rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if greater or equal (SF=OF).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 8C cw",
							Instruction:     "JL rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if less (SF≠ OF). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 8C cd",
							Instruction:     "JL rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if less (SF≠ OF).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 8E cw",
							Instruction:     "JLE rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if less or equal (ZF=1 or SF≠ OF). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 8E cd",
							Instruction:     "JLE rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if less or equal (ZF=1 or SF≠ OF).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 86 cw",
							Instruction:     "JNA rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not above (CF=1 or ZF=1). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 86 cd",
							Instruction:     "JNA rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not above (CF=1 or ZF=1).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 82 cw",
							Instruction:     "JNAE rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not above or equal (CF=1). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 82 cd",
							Instruction:     "JNAE rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not above or equal (CF=1).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 83 cw",
							Instruction:     "JNB rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not below (CF=0). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 83 cd",
							Instruction:     "JNB rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not below (CF=0).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 87 cw",
							Instruction:     "JNBE rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not below or equal (CF=0 and ZF=0). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 87 cd",
							Instruction:     "JNBE rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not below or equal (CF=0 and ZF=0).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 83 cw",
							Instruction:     "JNC rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not carry (CF=0). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 83 cd",
							Instruction:     "JNC rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not carry (CF=0).",
							OperandSize:     true,
						},
						{
							Page:            658,
							Opcode:          "0F 85 cw",
							Instruction:     "JNE rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not equal (ZF=0). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 85 cd",
							Instruction:     "JNE rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not equal (ZF=0).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8E cw",
							Instruction:     "JNG rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not greater (ZF=1 or SF≠ OF). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8E cd",
							Instruction:     "JNG rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not greater (ZF=1 or SF≠ OF).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8C cw",
							Instruction:     "JNGE rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not greater or equal (SF≠ OF). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8C cd",
							Instruction:     "JNGE rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not greater or equal (SF≠ OF).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8D cw",
							Instruction:     "JNL rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not less (SF=OF). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8D cd",
							Instruction:     "JNL rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not less (SF=OF).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8F cw",
							Instruction:     "JNLE rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not less or equal (ZF=0 and SF=OF). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8F cd",
							Instruction:     "JNLE rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not less or equal (ZF=0 and SF=OF).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 81 cw",
							Instruction:     "JNO rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not overflow (OF=0). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 81 cd",
							Instruction:     "JNO rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not overflow (OF=0).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8B cw",
							Instruction:     "JNP rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not parity (PF=0). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8B cd",
							Instruction:     "JNP rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not parity (PF=0).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 89 cw",
							Instruction:     "JNS rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not sign (SF=0). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 89 cd",
							Instruction:     "JNS rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not sign (SF=0).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 85 cw",
							Instruction:     "JNZ rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not zero (ZF=0). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 85 cd",
							Instruction:     "JNZ rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if not zero (ZF=0).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 80 cw",
							Instruction:     "JO rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if overflow (OF=1). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 80 cd",
							Instruction:     "JO rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if overflow (OF=1).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8A cw",
							Instruction:     "JP rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if parity (PF=1). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8A cd",
							Instruction:     "JP rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if parity (PF=1).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8A cw",
							Instruction:     "JPE rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if parity even (PF=1). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8A cd",
							Instruction:     "JPE rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if parity even (PF=1).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8B cw",
							Instruction:     "JPO rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if parity odd (PF=0). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 8B cd",
							Instruction:     "JPO rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if parity odd (PF=0).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 88 cw",
							Instruction:     "JS rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if sign (SF=1). Not supported in 64- bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 88 cd",
							Instruction:     "JS rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if sign (SF=1).",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 84 cw",
							Instruction:     "JZ rel16",
							OperandEncoding: "D",
							Mode64:          "Invalid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if 0 (ZF=1). Not supported in 64-bit mode.",
							OperandSize:     true,
						},
						{
							Page:            659,
							Opcode:          "0F 84 cd",
							Instruction:     "JZ rel32",
							OperandEncoding: "D",
							Mode64:          "Valid",
							Mode32:          "Valid",
							Mode16:          "Valid",
							Description:     "Jump near if 0 (ZF=1).",
							OperandSize:     true,
						},
					},
					OperandEncodingTable: []OperandEncoding{
						{
							Page:      660,
							Encoding:  "D",
							TupleType: "",
							Operands:  [4]string{"Offset", "N/A", "N/A", "N/A"},
						},
					},
				},
			},
		},
	}

	for _, test := range tests {
		t.Run(test.Name, func(t *testing.T) {
			name := filepath.Join("testdata", test.File+".pdf")
			r, err := openPDF(name)
			if err != nil {
				t.Fatalf("failed to parse %s: %v", test.Name, err)
			}

			id, date, err := ParseMetadata(r)
			if err != nil {
				t.Fatalf("failed to parse %s for metadata: %v", test.Name, err)
			}

			if id != test.ID {
				t.Errorf("bad document ID: got %q, want %q", id, test.ID)
			}

			if date != test.Date {
				t.Errorf("bad publishing date: got %q, want %q", date, test.Date)
			}

			for i, want := range test.Listings {
				got, nextPage, err := ParsePage(r, want.Page, nil, false)
				if err != nil {
					t.Errorf("failed to parse page %d for listing %d: %v", want.Page, i+1, err)
					continue
				}

				if diff := cmp.Diff(want, got); diff != "" {
					t.Errorf("ParsePage(%d): (-want, +got)\n%s", want.Page, diff)
					continue
				}

				if nextPage != want.Page+want.Pages {
					t.Errorf("ParsePage(%d): got next page %d, want %d", want.Page, nextPage, want.Page+want.Pages)
					continue
				}
			}
		})
	}
}
